// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}
datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  // directUrl = env("DIRECT_URL")
}
// datasource db {
//   provider = "postgresql"
//   url      = env("DATABASE_URL")
// }
model User{
  id Int @id @default(autoincrement())
  username String ?
  email String
  password String 
  role Role @default(Employee)
  createdAt DateTime @default(now()) 
}
model Employee{
  employee_id Int @id @default(autoincrement())
  firstname String ?
  lastname String ?
  dob DateTime ?
  gender String ?
  address String ?
  phone String ?
  email String @unique
  hireDate DateTime ?
  position String 
  createdAt DateTime ?
  updatedAt DateTime @updatedAt 
  attendances Attendance[] 
  salaries Salary[]
  employee_Projects employeeProjects[]
}

model Attendance{
  attendance_id Int @id @default(autoincrement())
  employee_id Int 
  date DateTime
  checkin_Time DateTime
  checkout_Time DateTime ?
  status String 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  employee  Employee @relation(fields: [employee_id] ,references: [employee_id])
}

model leaveRequests{
  leave_id Int @id @default(autoincrement())
  employee_id Int
  leaveType String
  start_Date DateTime
  end_Date DateTime
  status String
  createdAt DateTime
  updatedAt DateTime @updatedAt
}

model Salary{
  salary_id Int @id @default(autoincrement())
  employee_id Int
  amount Float
  start_Date DateTime
  end_Date DateTime
  createdAt DateTime
  updatedAt DateTime @updatedAt
  employee Employee @relation(fields: [employee_id],references: [employee_id])
}

model Projects{
  project_id Int @id @default(autoincrement())
  project_Name String
  start_Date DateTime
  end_Date DateTime
  budget Float
  manager_id Int
  createdAt DateTime
  updatedAt DateTime @updatedAt
  employeeProjects employeeProjects[]
}

model employeeProjects{
  employee_project_id Int @id @default(autoincrement())
  employee_id Int
  project_id Int
  role String
  start_Date DateTime
  end_Date DateTime 
  createdAt DateTime
  updatedAt DateTime @updatedAt
  employee Employee @relation(fields: [employee_id],references: [employee_id])
  project Projects @relation(fields: [project_id],references: [project_id])
}

//enums
enum Role{
  Employee
  Admin
  Intern 
  Manager
}